// Mocks generated by Mockito 5.4.4 from annotations
// in nasanews/test/src/features/data/repositories/daily_pictures_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nasanews/src/features/daily_picture/data/data.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RemoteDailyPicturesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDailyPicturesDataSource extends _i1.Mock
    implements _i2.RemoteDailyPicturesDataSource {
  MockRemoteDailyPicturesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<
          ({List<_i2.DailyPictureModel>? dailyPictures, _i2.RemoteRequestResult? errorType})>
      getDailyPictures() => (super.noSuchMethod(
            Invocation.method(
              #getDailyPictures,
              [],
            ),
            returnValue: _i3.Future<
                ({
                  List<_i2.DailyPictureModel>? dailyPictures,
                  _i2.RemoteRequestResult? errorType
                })>.value((dailyPictures: null, errorType: null)),
          ) as _i3.Future<
              ({
                List<_i2.DailyPictureModel>? dailyPictures,
                _i2.RemoteRequestResult? errorType
              })>);
}

/// A class which mocks [LocalDailyPicturesDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDailyPicturesDataSource extends _i1.Mock
    implements _i2.LocalDailyPicturesDataSource {
  MockLocalDailyPicturesDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<
          ({List<_i2.DailyPictureModel>? dailyPictures, _i2.LocalRequestResult resultType})>
      getDailyPictures() => (super.noSuchMethod(
            Invocation.method(
              #getDailyPictures,
              [],
            ),
            returnValue: _i3.Future<
                ({
                  List<_i2.DailyPictureModel>? dailyPictures,
                  _i2.LocalRequestResult resultType
                })>.value((
              dailyPictures: null,
              resultType: _i2.LocalRequestResult.errorRetrieving
            )),
          ) as _i3.Future<
              ({
                List<_i2.DailyPictureModel>? dailyPictures,
                _i2.LocalRequestResult resultType
              })>);

  @override
  _i3.Future<_i2.LocalRequestResult> saveDailyPictures(
          List<_i2.DailyPictureModel>? dailyPictures) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDailyPictures,
          [dailyPictures],
        ),
        returnValue: _i3.Future<_i2.LocalRequestResult>.value(
            _i2.LocalRequestResult.errorRetrieving),
      ) as _i3.Future<_i2.LocalRequestResult>);

  @override
  _i3.Future<_i2.LocalRequestResult> saveSinglePicture(
          _i2.DailyPictureModel? picture) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSinglePicture,
          [picture],
        ),
        returnValue: _i3.Future<_i2.LocalRequestResult>.value(
            _i2.LocalRequestResult.errorRetrieving),
      ) as _i3.Future<_i2.LocalRequestResult>);
}
